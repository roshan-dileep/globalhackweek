import { FarmingToolInfo } from "../items/tools.js";
import { FortuneSource, FortuneSourceProgress, FortuneUpgrade, Upgrade } from "../constants/upgrades.js";
import { Upgradeable, UpgradeableInfo } from "../fortune/upgradeable.js";
import { DynamicFortuneSource } from "./sources/toolsources.js";
export declare function getFortune(level: number | null | undefined, source: FortuneSource): number;
export declare function getItemUpgrades(upgradeable: Upgradeable): FortuneUpgrade[];
export declare function getLastToolUpgrade(tool: FarmingToolInfo): UpgradeableInfo | undefined;
export declare function getNextItemUpgradeableTo(upgradeable: Upgradeable, options: Partial<Record<string, UpgradeableInfo>>): {
    upgrade: Upgrade;
    info: UpgradeableInfo;
} | undefined;
export declare function getLastItemUpgradeableTo(upgradeable: Upgradeable, options: Partial<Record<string, UpgradeableInfo>>): {
    upgrade: Upgrade;
    info: UpgradeableInfo;
} | undefined;
export declare function getSourceProgress<T extends object>(upgradeable: T, sources: DynamicFortuneSource<T>[], zeroed?: boolean): FortuneSourceProgress[];
export declare function getUpgradeableRarityUpgrade(upgradeable: Upgradeable): FortuneUpgrade | undefined;
export declare function getUpgradeableEnchants(upgradeable: Upgradeable): FortuneUpgrade[];
export declare function getUpgradeableGems(upgradeable: Upgradeable): FortuneUpgrade[];
