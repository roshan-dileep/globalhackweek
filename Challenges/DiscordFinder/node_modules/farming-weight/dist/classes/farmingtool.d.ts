import { Crop } from '../constants/crops';
import { Rarity, Reforge, ReforgeTier } from '../constants/reforges';
import { FarmingToolInfo } from '../constants/tools';
import { EliteItemDto } from './item';
import { PlayerOptions } from './player';
export declare class FarmingTool {
    item: EliteItemDto;
    crop: Crop;
    tool: FarmingToolInfo;
    itemname: string;
    private colorPrefix;
    get name(): string;
    rarity: Rarity;
    counter: number | undefined;
    cultivating: number;
    reforge: Reforge | undefined;
    reforgeStats: ReforgeTier | undefined;
    logCounter: number;
    collAnalysis: number;
    farmingForDummies: number;
    recombobulated: boolean;
    fortune: number;
    fortuneBreakdown: Record<string, number>;
    private options?;
    constructor(item: EliteItemDto, options?: PlayerOptions);
    setOptions(options: PlayerOptions): void;
    rebuildTool(item: EliteItemDto, options?: PlayerOptions): void;
    private setReforge;
    changeReforgeTo(reforgeId: string): void;
    changeFarmedCropsTo(crops: number): void;
    getFortune(): number;
    private getCounter;
    private getCultivating;
    getCultivatingLevel(): number;
    get farmed(): number;
    isUsed(): boolean;
    isMissingDedication(): boolean | 0 | null | undefined;
    private getFarmingAbilityFortune;
    static isValid(item: EliteItemDto | FarmingTool): boolean;
    static fromArray(items: EliteItemDto[], options?: PlayerOptions): FarmingTool[];
}
