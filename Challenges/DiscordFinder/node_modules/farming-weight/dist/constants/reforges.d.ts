import { Stat } from "./stats.js";
export type RarityRecord<T> = Partial<Record<Rarity, T>>;
export declare enum Rarity {
    Common = "Common",
    Uncommon = "Uncommon",
    Rare = "Rare",
    Epic = "Epic",
    Legendary = "Legendary",
    Mythic = "Mythic",
    Divine = "Divine",
    Special = "Special",
    VerySpecial = "Very Special",
    Ultimate = "Ultimate",
    Admin = "Admin"
}
export declare const RARITY_VALUES: {
    Common: number;
    Uncommon: number;
    Rare: number;
    Epic: number;
    Legendary: number;
    Mythic: number;
    Divine: number;
    Special: number;
    "Very Special": number;
    Ultimate: number;
    Admin: number;
};
export declare function compareRarity(a: Rarity | string, b: Rarity | string): number;
export declare enum ReforgeTarget {
    Hoe = "Hoe",
    Axe = "Axe",
    Armor = "Armor",
    Equipment = "Equipment",
    Sword = "Sword"
}
export interface ReforgeTier {
    stats: Partial<Record<Stat, number>>;
    cost: number;
}
export type ReforgeTiers = Record<Rarity, ReforgeTier>;
export interface Reforge {
    name: string;
    wiki: string;
    stone?: {
        name: string;
        id: string;
        npc?: number;
        copper?: number;
    };
    appliesTo?: ReforgeTarget[];
    tiers: Partial<ReforgeTiers>;
}
export declare const REFORGES: Partial<Record<string, Reforge>>;
export declare const STAT_ICONS: Record<Stat, string>;
export declare const RARITY_COLORS: Record<Rarity, string>;
