import { FarmingPetInfo, FarmingPetItemInfo, FarmingPetType, FarmingPets } from '../items/pets.js';
import { Rarity } from '../constants/reforges.js';
import { Stat } from "../constants/stats.js";
import { EliteItemDto } from './item.js';
import { PlayerOptions } from '../player/playeroptions.js';
export declare function createFarmingPet(pet: FarmingPetType): FarmingPet;
export declare class FarmingPet {
    readonly pet: FarmingPetType;
    readonly type: FarmingPets;
    readonly info: FarmingPetInfo;
    readonly rarity: Rarity;
    readonly level: number;
    readonly item: FarmingPetItemInfo | undefined;
    fortune: number;
    breakdown: Record<string, number>;
    options?: PlayerOptions;
    constructor(pet: FarmingPetType, options?: PlayerOptions);
    setOptions(options: PlayerOptions): void;
    getFortune(): number;
    getFormattedName(): string;
    getLevel(): number;
    getChimeraAffectedStats(multiplier: number): Record<Stat, number>;
    static isValid(pet: FarmingPetType): boolean | "" | undefined;
    static fromArray(items: EliteItemDto[], options?: PlayerOptions): FarmingPet[];
}
