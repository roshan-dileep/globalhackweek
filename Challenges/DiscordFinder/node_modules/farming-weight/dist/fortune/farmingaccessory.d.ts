import { FarmingAccessoryInfo } from '../items/accessories.js';
import { Rarity } from '../constants/reforges.js';
import { FortuneSourceProgress } from '../constants/upgrades.js';
import { PlayerOptions } from '../player/playeroptions.js';
import { EliteItemDto } from './item.js';
import { UpgradeableBase, UpgradeableInfo } from './upgradeable.js';
export declare class FarmingAccessory extends UpgradeableBase {
    readonly item: EliteItemDto;
    readonly info: FarmingAccessoryInfo;
    readonly rarity: Rarity;
    readonly recombobulated: boolean;
    fortune: number;
    fortuneBreakdown: Record<string, number>;
    options?: PlayerOptions;
    constructor(item: EliteItemDto, options?: PlayerOptions);
    getProgress(zereod?: boolean): FortuneSourceProgress[];
    getFortune(): number;
    static isValid(item: EliteItemDto): boolean;
    static fromArray(items: EliteItemDto[]): FarmingAccessory[];
    static fakeItem(info: UpgradeableInfo, options?: PlayerOptions): FarmingAccessory | undefined;
}
