import Endpoint from '../Private/Endpoint.js';
import Player from '../Structures/Player/Player.js';
class getPlayer extends Endpoint {
    client;
    constructor(client) {
        super(client);
        this.client = client;
    }
    async execute(query, options) {
        if (!query)
            throw new Error(this.client.errors.NO_NICKNAME_UUID);
        query = await this.client.requestHandler.toUUID(query);
        const res = await this.client.requestHandler.request(`/player?uuid=${query}`, options);
        if (res.options.raw)
            return res;
        if (query && !res.data.player)
            throw new Error(this.client.errors.PLAYER_HAS_NEVER_LOGGED);
        return new Player(res.data.player, {
            guild: options?.guild ? (await this.client.getGuild('player', query)) : null,
            houses: options?.houses ? (await this.client.getPlayerHouses(query)) : null,
            recentGames: options?.recentGames ? (await this.client.getRecentGames(query)) : null
        });
    }
}
export default getPlayer;
//# sourceMappingURL=getPlayer.js.map