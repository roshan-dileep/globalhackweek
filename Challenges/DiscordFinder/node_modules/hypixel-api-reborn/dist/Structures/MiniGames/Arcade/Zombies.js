import Divide from '../../../Utils/Divide.js';
import ZombiesStats from './ZombiesStats.js';
import { RemoveSnakeCaseString } from '../../../Utils/RemoveSnakeCase.js';
class Zombies {
    overall;
    deadEnd;
    badBlood;
    alienArcadium;
    prison;
    killsByZombie;
    bulletsHit;
    bulletsShot;
    gunAccuracy;
    headshots;
    headshotAccuracy;
    constructor(data) {
        this.overall = new ZombiesStats(data);
        this.deadEnd = new ZombiesStats(data, 'deadend');
        this.badBlood = new ZombiesStats(data, 'badblood');
        this.alienArcadium = new ZombiesStats(data, 'alienarcadium');
        this.prison = new ZombiesStats(data, 'prison');
        this.killsByZombie = this.parseZombiesKills(data);
        this.bulletsHit = data?.bullets_hit_zombies || 0;
        this.bulletsShot = data?.bullets_shot_zombies || 0;
        this.gunAccuracy = Divide(this.bulletsHit, this.bulletsShot);
        this.headshots = data?.headshots_zombies || 0;
        this.headshotAccuracy = Divide(this.headshots, this.bulletsShot);
    }
    parseZombiesKills(data) {
        const matches = Array.from(Object.keys(data))
            .map((x) => x.match(/^([A-Za-z]+)_zombie_kills_zombies$/))
            .filter((x) => x);
        // From entries might be broken
        return Object.fromEntries(matches.map((x) => [RemoveSnakeCaseString(x[1]), data[x[0]]]));
    }
}
export default Zombies;
//# sourceMappingURL=Zombies.js.map