import Divide from '../../../Utils/Divide.js';
import MegaWallsKitStats from './MegaWallsKitStats.js';
import MegaWallsModeStats from './MegaWallsModeStats.js';
class MegaWalls {
    selectedClass;
    coins;
    kills;
    assists;
    deaths;
    KDR;
    wins;
    losses;
    WLR;
    finalKills;
    finalAssists;
    finalDeaths;
    FKDR;
    playedGames;
    witherDamage;
    defenderKills;
    walked;
    blocksPlaced;
    blocksBroken;
    meleeKills;
    damageDealt;
    faceOff;
    casualBrawl;
    cow;
    hunter;
    shark;
    arcanist;
    deadlord;
    golem;
    herobrine;
    pigman;
    zombie;
    blaze;
    enderman;
    shaman;
    squid;
    creeper;
    pirate;
    sheep;
    skeleton;
    spider;
    werewolf;
    angel;
    assassin;
    automaton;
    moleman;
    phoenix;
    renegade;
    snowman;
    constructor(data) {
        this.selectedClass = data?.chosen_class || 'None';
        this.coins = data?.coins || data?.tokens || 0;
        this.kills = data?.kills || 0;
        this.assists = data?.assists || 0;
        this.deaths = data?.deaths || 0;
        this.KDR = Divide(this.kills, this.deaths);
        this.wins = data?.wins || 0;
        this.losses = data?.losses || 0;
        this.WLR = Divide(this.wins, this.losses);
        this.finalKills = (data?.final_kills || 0) + (data?.finalkills || 0);
        this.finalAssists = (data?.final_assists || 0) + (data?.finalassists || 0);
        this.finalDeaths = (data?.final_deaths || 0) + (data?.finalDeaths || 0);
        this.FKDR = Divide(this.finalKills, this.finalDeaths);
        this.playedGames = data?.games_played || 0;
        this.witherDamage = (data?.wither_damage || 0) + (data?.witherDamager || 0);
        this.defenderKills = data?.defender_kills || 0;
        this.walked = data?.meters_walked || 0;
        this.blocksPlaced = data?.blocks_placed || 0;
        this.blocksBroken = data?.blocks_broken || 0;
        this.meleeKills = data?.kills_melee || 0;
        this.damageDealt = data?.damage_dealt || 0;
        this.faceOff = new MegaWallsModeStats(data, 'face_off');
        this.casualBrawl = new MegaWallsModeStats(data, 'gvg');
        this.cow = new MegaWallsKitStats(data, 'cow');
        this.hunter = new MegaWallsKitStats(data, 'hunter');
        this.shark = new MegaWallsKitStats(data, 'shark');
        this.arcanist = new MegaWallsKitStats(data, 'arcanist');
        this.deadlord = new MegaWallsKitStats(data, 'deadlord');
        this.golem = new MegaWallsKitStats(data, 'golem');
        this.herobrine = new MegaWallsKitStats(data, 'herobrine');
        this.pigman = new MegaWallsKitStats(data, 'pigman');
        this.zombie = new MegaWallsKitStats(data, 'zombie');
        this.blaze = new MegaWallsKitStats(data, 'blaze');
        this.enderman = new MegaWallsKitStats(data, 'enderman');
        this.shaman = new MegaWallsKitStats(data, 'shaman');
        this.squid = new MegaWallsKitStats(data, 'squid');
        this.creeper = new MegaWallsKitStats(data, 'creeper');
        this.pirate = new MegaWallsKitStats(data, 'pirate');
        this.sheep = new MegaWallsKitStats(data, 'sheep');
        this.skeleton = new MegaWallsKitStats(data, 'skeleton');
        this.spider = new MegaWallsKitStats(data, 'spider');
        this.werewolf = new MegaWallsKitStats(data, 'werewolf');
        this.angel = new MegaWallsKitStats(data, 'angel');
        this.assassin = new MegaWallsKitStats(data, 'assassin');
        this.automaton = new MegaWallsKitStats(data, 'automaton');
        this.moleman = new MegaWallsKitStats(data, 'moleman');
        this.phoenix = new MegaWallsKitStats(data, 'phoenix');
        this.renegade = new MegaWallsKitStats(data, 'renegade');
        this.snowman = new MegaWallsKitStats(data, 'snowman');
    }
}
export default MegaWalls;
//# sourceMappingURL=MegaWalls.js.map