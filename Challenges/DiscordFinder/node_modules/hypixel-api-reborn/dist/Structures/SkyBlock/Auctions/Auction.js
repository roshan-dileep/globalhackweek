import BaseAuction from './BaseAuction.js';
import Bid from './Bid.js';
class Auction extends BaseAuction {
    coop;
    auctionStartTimestamp;
    auctionStart;
    auctionEndTimestamp;
    auctionEnd;
    item;
    itemLore;
    itemLoreRaw;
    rarity;
    startingBid;
    highestBid;
    bids;
    claimed;
    claimedBidders;
    constructor(data, includeItemBytes = false) {
        super(data, includeItemBytes);
        this.coop = data.coop || [];
        this.auctionStartTimestamp = data.start;
        this.auctionStart = new Date(this.auctionStartTimestamp);
        this.auctionEndTimestamp = data.end || null;
        this.auctionEnd = this.auctionEndTimestamp ? new Date(this.auctionEndTimestamp) : null;
        this.item = data.item_name || null;
        this.itemLore = data.item_lore ? data.item_lore.replace(/ยง([1-9]|[a-l])|ยง/gm, '') : null;
        this.itemLoreRaw = data.item_lore || null;
        this.rarity = data.tier || null;
        this.startingBid = data.starting_bid || 0;
        this.highestBid = this.bin ? data.starting_bid : data.highest_bid_amount || 0;
        this.bids = data.bids.length ? data.bids.map((b) => new Bid(b)) : [];
        this.claimed = data.claimed || false;
        this.claimedBidders = this.claimed ? data.claimed_bidders : [];
    }
    toString() {
        return this.item;
    }
}
export default Auction;
//# sourceMappingURL=Auction.js.map