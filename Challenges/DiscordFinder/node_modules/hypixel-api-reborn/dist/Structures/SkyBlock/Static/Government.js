import Candidate from './Candidate.js';
class GovernmentData {
    lastUpdatedTimestamp;
    lastUpdatedAt;
    lastElectionResults;
    mayor;
    runningYear;
    currentElectionResults;
    currentElectionFor;
    constructor(data) {
        this.lastUpdatedTimestamp = parseInt(data.lastUpdated, 10);
        this.lastUpdatedAt = new Date(this.lastUpdatedTimestamp);
        const lastElectionResults = data.mayor.election.candidates.map((x) => new Candidate(x, x.name === data.mayor.name));
        this.lastElectionResults = new Map(lastElectionResults
            .sort((a, b) => a.votesReceived - b.votesReceived)
            .reverse()
            .map((x) => [x.name, x]));
        this.mayor = this.lastElectionResults.get(data.mayor.name);
        this.runningYear = parseInt(data.mayor.election.year, 10) || 0;
        const thisElection = data.current?.candidates.map((x) => new Candidate(x, x.name === data.mayor.name)) || null;
        this.currentElectionResults = thisElection
            ? new Map(thisElection
                .sort((a, b) => a.votesReceived - b.votesReceived)
                .reverse()
                .map((x) => [x.name, x]))
            : null;
        this.currentElectionFor = parseInt(data.current?.year, 10) || null;
    }
    toString() {
        return this.mayor?.name || '';
    }
}
export default GovernmentData;
//# sourceMappingURL=Government.js.map