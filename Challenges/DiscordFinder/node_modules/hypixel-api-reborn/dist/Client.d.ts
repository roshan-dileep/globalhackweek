import Achievements from './Structures/Static/Achievements/Achievements.js';
import Auction from './Structures/SkyBlock/Auctions/Auction.js';
import BingoData from './Structures/SkyBlock/Static/BingoData.js';
import Booster from './Structures/Boosters/Booster.js';
import CacheHandler from './Private/CacheHandler.js';
import Challenges from './Structures/Static/Challenges.js';
import Errors from './Errors.js';
import FireSale from './Structures/SkyBlock/Static/FireSale.js';
import Functions from './Private/Functions.js';
import GameCounts from './Structures/GameCounts.js';
import GovernmentData from './Structures/SkyBlock/Static/Government.js';
import Guild from './Structures/Guild/Guild.js';
import GuildAchievements from './Structures/Static/Achievements/GuildAchievements.js';
import House from './Structures/House.js';
import Leaderboard from './Structures/Leaderboard.js';
import Player from './Structures/Player/Player.js';
import Product from './Structures/SkyBlock/Bazaar/Product.js';
import Quests from './Structures/Static/Quests.js';
import RateLimit from './Private/RateLimit.js';
import RecentGame from './Structures/RecentGame.js';
import RequestData from './Private/RequestData.js';
import RequestHandler from './Private/RequestHandler.js';
import SkyblockGarden from './Structures/SkyBlock/SkyblockGarden.js';
import SkyblockMember from './Structures/SkyBlock/SkyblockMember.js';
import SkyblockMuseum from './Structures/SkyBlock/SkyblockMuseum.js';
import SkyblockNews from './Structures/SkyBlock/News/SkyblockNews.js';
import SkyblockProfile from './Structures/SkyBlock/SkyblockProfile.js';
import Status from './Structures/Status.js';
import Updater from './Private/Updater.js';
import WatchdogStats from './Structures/WatchdogStats.js';
import type { AuctionFetchOptions, AuctionRequestOptions, GuildFetchOptions, PlayerRequestOptions, SkyblockAuctionsResult, SkyblockRequestOptions } from './Types/API.js';
import type { ClientOptions } from './Types/Client.js';
import type { RequestOptions } from './Types/Requests.js';
declare class Client {
    options: ClientOptions;
    requestHandler: RequestHandler;
    cacheHandler: CacheHandler;
    functions: Functions;
    updater: Updater;
    errors: Errors;
    rateLimit: RateLimit;
    readonly key: string;
    interval: NodeJS.Timeout;
    constructor(key: string, options?: ClientOptions);
    destroy(): void;
    private parasOptions;
    getAchievements(options?: RequestOptions): Promise<Achievements | RequestData>;
    getActiveHouses(options?: RequestOptions): Promise<House[] | RequestData>;
    getBoosters(options?: RequestOptions): Promise<Booster[] | RequestData>;
    getChallenges(options?: RequestOptions): Promise<Challenges | RequestData>;
    getGameCounts(options?: RequestOptions): Promise<GameCounts | RequestData>;
    getGuild(searchParameter: GuildFetchOptions, query: string, options?: RequestOptions): Promise<Guild | null | RequestData>;
    getGuildAchievements(options?: RequestOptions): Promise<GuildAchievements | RequestData>;
    getHouse(query: string, options?: RequestOptions): Promise<House | RequestData>;
    getLeaderboards(options?: RequestOptions): Promise<Record<string, Leaderboard[]> | RequestData>;
    getPlayer(query: string, options?: PlayerRequestOptions): Promise<Player | RequestData>;
    getPlayerHouses(query: string, options?: RequestOptions): Promise<House[] | RequestData>;
    getQuests(options?: RequestOptions): Promise<Quests | RequestData>;
    getRecentGames(query: string, options?: RequestOptions): Promise<RecentGame[] | RequestData>;
    getSkyblockAuction(type: AuctionFetchOptions, query: string, options?: AuctionRequestOptions): Promise<Auction[] | RequestData>;
    getSkyblockAuctions(query: number | '*', options?: AuctionRequestOptions): Promise<SkyblockAuctionsResult>;
    getSkyblockAuctionsByPlayer(query: string, options?: AuctionRequestOptions): Promise<Auction[] | RequestData>;
    getSkyblockBazaar(options?: RequestOptions): Promise<Product[] | RequestData>;
    getSkyblockBingo(options?: RequestOptions): Promise<BingoData | RequestData>;
    getSkyblockFireSales(options?: RequestOptions): Promise<FireSale[] | RequestData>;
    getSkyblockGarden(profileId: string, options?: RequestOptions): Promise<SkyblockGarden | RequestData>;
    getSkyblockGovernment(options?: RequestOptions): Promise<GovernmentData | RequestData>;
    getSkyblockMember(query: string, options?: SkyblockRequestOptions): Promise<Map<string, SkyblockMember> | RequestData>;
    getSkyblockMuseum(query: string, profileId: string, options?: RequestOptions): Promise<SkyblockMuseum | RequestData>;
    getSkyblockNews(options?: RequestOptions): Promise<SkyblockNews[] | RequestData>;
    getSkyblockProfiles(query: string, options?: SkyblockRequestOptions): Promise<SkyblockProfile[] | RequestData>;
    getStatus(query: string, options?: RequestOptions): Promise<Status | RequestData>;
    getWatchdogStats(options?: RequestOptions): Promise<WatchdogStats | RequestData>;
}
export default Client;
//# sourceMappingURL=Client.d.ts.map